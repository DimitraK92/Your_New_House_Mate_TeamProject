@model YNHM.Entities.Models.House

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Administration/Views/Shared/_AdminLayout.cshtml";
}




<div class="page-content">
    <div class="page-header no-margin-bottom">
        <div class="container-fluid">
            <h2 class="h5 no-margin-bottom">Edit House</h2>
        </div>
    </div>
    <div class="container-fluid">
        <ul class="breadcrumb">
            <li class="breadcrumb-item">@Html.ActionLink("Back to List", "Index")</li>
        </ul>
    </div>
    <section class="no-padding-top">
        <div class="container-fluid">
            <div class="row">
                <!-- Form Elements -->
                <div class="col">
                    <div class="block">
                        <div class="block-body">
                            @using (Html.BeginForm(new { @class = "form-horizontal" }))
                            {
                                @Html.AntiForgeryToken()
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model.HouseId)
                                <div class="form-group row">
                                    <label class="col-sm-3 form-control-label">@Html.DisplayNameFor(model => model.Title)</label>
                                    <div class="col-sm-9">
                                        <input type="text" class="form-control" value="@Html.DisplayFor(model => model.Title)">
                                    </div>
                                </div>
                                <div class="line"></div>
                                <div class="form-group row">
                                    <label class="col-sm-3 form-control-label">Manager</label>
                                    <div class="col-sm-9">
                                        <input type="text" class="form-control" value="@String.Format($"{Html.DisplayFor(model => model.Manager.FirstName)} {Html.DisplayFor(model => model.Manager.LastName)}")">
                                    </div>
                                </div>
                                <div class="line"></div>
                                <div class="form-group row">
                                    <label class="col-sm-3 form-control-label">@Html.DisplayNameFor(model => model.PageViews)</label>
                                    <div class="col-sm-9">
                                        <input type="text" class="form-control" value="@Html.DisplayFor(model => model.PageViews)">
                                    </div>
                                </div>
                                <div class="line"></div>
                                <div class="form-group row">
                                    <label class="col-sm-3 form-control-label">Location</label>
                                    <div class="col-sm-9">
                                        <div class="form-group">
                                            <div class="input-group">
                                                <div class="input-group-prepend"><span class="input-group-text"> @Html.DisplayNameFor(model => model.Address):</span></div>
                                                <input type="text" class="form-control" value="@Html.DisplayFor(model => model.Address)">
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="input-group">
                                                <div class="input-group-prepend"><span class="input-group-text"> @Html.DisplayNameFor(model => model.PostalCode):</span></div>
                                                <input type="text" class="form-control" value="@Html.DisplayFor(model => model.PostalCode)">
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="input-group">
                                                <div class="input-group-prepend"><span class="input-group-text"> @Html.DisplayNameFor(model => model.District):</span></div>
                                                <input type="text" class="form-control" value="@Html.DisplayFor(model => model.District)">
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="input-group">
                                                <div class="input-group-prepend"><span class="input-group-text"> @Html.DisplayNameFor(model => model.MapLocation):</span></div>
                                                <input type="text" class="form-control" value="@Html.DisplayFor(model => model.MapLocation)">
                                                <div class="input-group-append">
                                                    <a class="form-control btn btn-primary" href="@Html.DisplayFor(model => model.MapLocation)">Go!</a>
                                                </div>

                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="line"></div>

                                <div class="form-group row">
                                    <label class="col-sm-3 form-control-label">Basic Info</label>
                                    <div class="col-sm-9">
                                        <div class="form-group">
                                            <div class="input-group">
                                                <div class="input-group-prepend"><span class="input-group-text"> @Html.DisplayNameFor(model => model.Floor):</span></div>
                                                <input type="text" class="form-control" value="@Html.DisplayFor(model => model.Floor)">
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="input-group">
                                                <div class="input-group-prepend"><span class="input-group-text"> @Html.DisplayNameFor(model => model.Area):</span></div>
                                                <input type="text" class="form-control" value="@Html.DisplayFor(model => model.Area)">
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="input-group">
                                                <div class="input-group-prepend"><span class="input-group-text"> @Html.DisplayNameFor(model => model.Bedrooms):</span></div>
                                                <input type="text" class="form-control" value="@Html.DisplayFor(model => model.Bedrooms)">
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="input-group">
                                                <div class="input-group-prepend"><span class="input-group-text"> @Html.DisplayNameFor(model => model.Rent): $ </span></div>
                                                <input type="text" class="form-control" value="@Html.DisplayFor(model => model.Rent)">
                                            </div>
                                        </div>

                                    </div>
                                </div>
                                <div class="line"></div>

                                <div class="line"></div>
                                <div class="form-group row">
                                    <label class="col-sm-3 form-control-label">Extra services</label>
                                    <div class="col-sm-9">

                                        @*small problem with checkboxes -
                                            they work but the template css does not apply on them.
                                            If you use raw html insted of Html Helper methods in order to have the templateCSS,
                                            then they do not work dinamically - that needs to be fixed
                                            (they are either always checked or always unchecked)*@


                                        <div class="i-checks">
                                            @Html.EditorFor(model => model.ElevatorInBuilding)
                                            @Html.ValidationMessageFor(model => model.ElevatorInBuilding, "", new { @class = "text-danger" })
                                            <label for="checkboxCustom">@Html.DisplayNameFor(model => model.ElevatorInBuilding)</label>
                                        </div>
                                        <div class="i-checks">
                                            @Html.EditorFor(model => model.FreeWiFi)
                                            @Html.ValidationMessageFor(model => model.FreeWiFi, "", new { @class = "text-danger" })
                                            <label for="checkboxCustom">@Html.DisplayNameFor(model => model.FreeWiFi)</label>
                                        </div>
                                        <div class="i-checks">
                                            @Html.EditorFor(model => model.Parking)
                                            @Html.ValidationMessageFor(model => model.Parking, "", new { @class = "text-danger" })
                                            <label for="checkboxCustom">@Html.DisplayNameFor(model => model.Parking)</label>
                                        </div>
                                        <div class="i-checks">
                                            @Html.EditorFor(model => model.AirCondition)
                                            @Html.ValidationMessageFor(model => model.AirCondition, "", new { @class = "text-danger" })
                                            <label for="checkboxCustom">@Html.DisplayNameFor(model => model.AirCondition)</label>
                                        </div>
                                        <div class="i-checks">
                                            @Html.EditorFor(model => model.OutdoorSeating)
                                            @Html.ValidationMessageFor(model => model.OutdoorSeating, "", new { @class = "text-danger" })
                                            <label for="checkboxCustom">@Html.DisplayNameFor(model => model.OutdoorSeating)</label>
                                        </div>
                                    </div>
                                </div>
                                <div class="line"></div>
                                <div class="form-group row">
                                    <label class="col-sm-3 form-control-label">Accessibility &amp; Inclusion</label>
                                    <div class="col-sm-9">

                                        <div class="i-checks">
                                            @Html.EditorFor(model => model.PetFriendly)
                                            @Html.ValidationMessageFor(model => model.PetFriendly, "", new { @class = "text-danger" })
                                            <label for="checkboxCustom">@Html.DisplayNameFor(model => model.PetFriendly)</label>
                                        </div>
                                        <div class="i-checks">
                                            @Html.EditorFor(model => model.WheelchairFriendly)
                                            @Html.ValidationMessageFor(model => model.WheelchairFriendly, "", new { @class = "text-danger" })
                                            <label for="checkboxCustom">@Html.DisplayNameFor(model => model.WheelchairFriendly)</label>
                                        </div>
                                    </div>
                                </div>
                                <div class="line"></div>
                                <div class="form-group row">
                                    <div class="col-sm-9 ml-auto">
                                        <button type="submit" class="btn btn-primary">Save changes</button> |
                                        @Html.ActionLink("Back to List", "Index", new { @class = "btn btn-secondary" })

                                    </div>
                                </div>
                            }
                            @*<form class="form-horizontal">*@

                            @*</form>*@
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </section>
</div>





































@*<h2>Edit</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>House</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.HouseId)

            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PageViews, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PageViews, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PageViews, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Area, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Area, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Area, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Floor, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Floor, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Floor, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Bedrooms, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Bedrooms, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Bedrooms, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Rent, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Rent, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Rent, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.District, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.District, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.District, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MapLocation, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MapLocation, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MapLocation, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ElevatorInBuilding, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.ElevatorInBuilding)
                        @Html.ValidationMessageFor(model => model.ElevatorInBuilding, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FreeWiFi, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.FreeWiFi)
                        @Html.ValidationMessageFor(model => model.FreeWiFi, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Parking, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Parking)
                        @Html.ValidationMessageFor(model => model.Parking, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AirCondition, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.AirCondition)
                        @Html.ValidationMessageFor(model => model.AirCondition, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PetFriendly, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.PetFriendly)
                        @Html.ValidationMessageFor(model => model.PetFriendly, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OutdoorSeating, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.OutdoorSeating)
                        @Html.ValidationMessageFor(model => model.OutdoorSeating, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.WheelchairFriendly, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.WheelchairFriendly)
                        @Html.ValidationMessageFor(model => model.WheelchairFriendly, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ManagerId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ManagerId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ManagerId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </di*@v>
